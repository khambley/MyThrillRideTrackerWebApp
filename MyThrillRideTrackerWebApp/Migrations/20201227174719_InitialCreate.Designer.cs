// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyThrillRideTrackerWebApp.Models;

namespace MyThrillRideTrackerWebApp.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20201227174719_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("MyThrillRideTrackerWebApp.Models.ImageFileName", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ImageFileNameId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ParkId")
                        .HasColumnType("int");

                    b.Property<int?>("RatingId")
                        .HasColumnType("int");

                    b.Property<int?>("RideId")
                        .HasColumnType("int");

                    b.Property<int?>("VisitId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ImageFileNameId");

                    b.HasIndex("ParkId");

                    b.HasIndex("RatingId");

                    b.HasIndex("RideId");

                    b.HasIndex("VisitId");

                    b.ToTable("ImageFileNames");
                });

            modelBuilder.Entity("MyThrillRideTrackerWebApp.Models.Park", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Parks");
                });

            modelBuilder.Entity("MyThrillRideTrackerWebApp.Models.Rating", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ParkId")
                        .HasColumnType("int");

                    b.Property<int?>("RideId")
                        .HasColumnType("int");

                    b.Property<decimal>("Stars")
                        .HasColumnType("decimal(8,2)");

                    b.HasKey("Id");

                    b.HasIndex("ParkId");

                    b.HasIndex("RideId");

                    b.ToTable("Ratings");
                });

            modelBuilder.Entity("MyThrillRideTrackerWebApp.Models.Ride", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("BuildDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Height")
                        .HasColumnType("int");

                    b.Property<int>("Length")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ParkId")
                        .HasColumnType("int");

                    b.Property<string>("RideType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TopSpeed")
                        .HasColumnType("int");

                    b.Property<int?>("VisitId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ParkId");

                    b.HasIndex("VisitId");

                    b.ToTable("Rides");
                });

            modelBuilder.Entity("MyThrillRideTrackerWebApp.Models.Visit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ParkId")
                        .HasColumnType("int");

                    b.Property<DateTime>("VisitDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ParkId");

                    b.ToTable("Visits");
                });

            modelBuilder.Entity("MyThrillRideTrackerWebApp.Models.ImageFileName", b =>
                {
                    b.HasOne("MyThrillRideTrackerWebApp.Models.ImageFileName", null)
                        .WithMany("ImageFiles")
                        .HasForeignKey("ImageFileNameId");

                    b.HasOne("MyThrillRideTrackerWebApp.Models.Park", "Park")
                        .WithMany("ImageFiles")
                        .HasForeignKey("ParkId");

                    b.HasOne("MyThrillRideTrackerWebApp.Models.Rating", "Rating")
                        .WithMany("ImageFiles")
                        .HasForeignKey("RatingId");

                    b.HasOne("MyThrillRideTrackerWebApp.Models.Ride", "Ride")
                        .WithMany("ImageFiles")
                        .HasForeignKey("RideId");

                    b.HasOne("MyThrillRideTrackerWebApp.Models.Visit", "Visit")
                        .WithMany("ImageFiles")
                        .HasForeignKey("VisitId");

                    b.Navigation("Park");

                    b.Navigation("Rating");

                    b.Navigation("Ride");

                    b.Navigation("Visit");
                });

            modelBuilder.Entity("MyThrillRideTrackerWebApp.Models.Rating", b =>
                {
                    b.HasOne("MyThrillRideTrackerWebApp.Models.Park", "Park")
                        .WithMany("Ratings")
                        .HasForeignKey("ParkId");

                    b.HasOne("MyThrillRideTrackerWebApp.Models.Ride", "Ride")
                        .WithMany("Ratings")
                        .HasForeignKey("RideId");

                    b.Navigation("Park");

                    b.Navigation("Ride");
                });

            modelBuilder.Entity("MyThrillRideTrackerWebApp.Models.Ride", b =>
                {
                    b.HasOne("MyThrillRideTrackerWebApp.Models.Park", "Park")
                        .WithMany("Rides")
                        .HasForeignKey("ParkId");

                    b.HasOne("MyThrillRideTrackerWebApp.Models.Visit", null)
                        .WithMany("Rides")
                        .HasForeignKey("VisitId");

                    b.Navigation("Park");
                });

            modelBuilder.Entity("MyThrillRideTrackerWebApp.Models.Visit", b =>
                {
                    b.HasOne("MyThrillRideTrackerWebApp.Models.Park", "Park")
                        .WithMany()
                        .HasForeignKey("ParkId");

                    b.Navigation("Park");
                });

            modelBuilder.Entity("MyThrillRideTrackerWebApp.Models.ImageFileName", b =>
                {
                    b.Navigation("ImageFiles");
                });

            modelBuilder.Entity("MyThrillRideTrackerWebApp.Models.Park", b =>
                {
                    b.Navigation("ImageFiles");

                    b.Navigation("Ratings");

                    b.Navigation("Rides");
                });

            modelBuilder.Entity("MyThrillRideTrackerWebApp.Models.Rating", b =>
                {
                    b.Navigation("ImageFiles");
                });

            modelBuilder.Entity("MyThrillRideTrackerWebApp.Models.Ride", b =>
                {
                    b.Navigation("ImageFiles");

                    b.Navigation("Ratings");
                });

            modelBuilder.Entity("MyThrillRideTrackerWebApp.Models.Visit", b =>
                {
                    b.Navigation("ImageFiles");

                    b.Navigation("Rides");
                });
#pragma warning restore 612, 618
        }
    }
}
